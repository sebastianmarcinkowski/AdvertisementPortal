@using AdvertisementPortal.Core.Models.Domains
@model AdvertisementPortal.Core.ViewModels.HomeViewModel

@{
	ViewData["Title"] = "Strona główna";
}

<h1>Lista ogłoszeń</h1>

@if (Model.Advertisements != null && Model.Advertisements.Any())
{

	<h3 class="mt-3 mb-2">Filtrowanie</h3>

	<form method="post">
		<div class="row">
			<div class="col">
				@Html.TextBoxFor(
					x => x.Filter.Title,
					new { @class = "form-control mb-2", placeholder = "Tytuł" })
			</div>
			<div class="col">
				@Html.DropDownListFor(
					x => x.Filter.CategoryId,
					new SelectList(Model.Categories, "Id", "Name"),
					"-- wybierz kategorię --",
					new { @class = "form-control mb-2" })
			</div>
			<div class="col">
				<button type="submit" class="btn btn-primary mb-2">Szukaj</button>
			</div>
		</div>
	</form>




	List<Advertisement> advertisementList = Model.Advertisements.ToList();

	for (int i = 0; i < advertisementList.Count(); i += 2)
	{
		<div class="row">




			<div class="card card-body m-3 col-4">

				<img class="card-img-top"
					 src="https://communications.gwu.edu/sites/g/files/zaxdzs5371/files/2023-05/template-resize-video.jpg"
					 alt="@advertisementList[i].Title">

				<div class="card-body">

					<h5 class="card-title">@advertisementList[i].Title</h5>

					<p class="card-text">

						<small class="text-muted">

							@{
								var lastUpdatedTime =
								advertisementList[i].LastUpdatedTime != null
								?
								"· Edytowano " + advertisementList[i].LastUpdatedTime?.ToString("dd-MM-yyyy")
								:
								"";
							}


							@advertisementList[i].CreatedTime.ToString("dd-MM-yyyy")
							@lastUpdatedTime
							·
							@advertisementList[i].Category.Name

						</small>

					</p>

					<p class="card-text">

						@{
							var content =
							advertisementList[i].Content.Length > 100
							?
							advertisementList[i].Content.Substring(0, 100)
							:
							advertisementList[i].Content;
						}

						@content

					</p>

					<a href="@Url.Action("Index","Advertisement",
							new { id = advertisementList[i].Id })"
					   class="btn btn-primary">

						<i class="fa-solid fa-arrow-right"></i>
						Zobacz szczegóły

					</a>

				</div>

			</div>




			@if ((i + 1) < advertisementList.Count())
			{
				<div class="card card-body m-3 col-4">

					<img class="card-img-top"
						 src="https://communications.gwu.edu/sites/g/files/zaxdzs5371/files/2023-05/template-resize-video.jpg"
						 alt="@advertisementList[i+1].Title">

					<div class="card-body">

						<h5 class="card-title">@advertisementList[i + 1].Title</h5>

						<p class="card-text">

							<small class="text-muted">

								@{
									lastUpdatedTime =
									advertisementList[i + 1].LastUpdatedTime != null
									?
									"· Edytowano " + advertisementList[i + 1].LastUpdatedTime?.ToString("dd-MM-yyyy")
									:
									"";
								}


								@advertisementList[i + 1].CreatedTime.ToString("dd-MM-yyyy")
								@lastUpdatedTime
								·
								@advertisementList[i + 1].Category.Name
							</small>

						</p>
						<p class="card-text">

							@{
								content =
								advertisementList[i + 1].Content.Length > 100
								?
								advertisementList[i + 1].Content.Substring(0, 100)
								:
								advertisementList[i + 1].Content;
							}

							@content

						</p>

						<a href="@Url.Action("Index","Advertisement",
								new { id = advertisementList[i+1].Id })"
						   class="btn btn-primary">

							<i class="fa-solid fa-arrow-right"></i>
							Zobacz szczegóły

						</a>

					</div>

				</div>
			}




		</div>
	}
}
else
{
	<div class="alert alert-warning mt-3" role="alert">Nie znaleziono ogłoszeń!</div>
}
