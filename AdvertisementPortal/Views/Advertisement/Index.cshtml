@model AdvertisementPortal.Core.ViewModels.AdvertisementViewModel

@{
	ViewData["Title"] = Model.Title;
}

<div class="container col-8">




	<img class="img-fluid mb-2 mt-2"
		 src="https://warsawtour.pl/wp-content/uploads/2023/03/Panorama-Warszawy-z-Widok-Towers-fot.-Filip-Kwiatkowski-1.jpg"
		 alt="@Model.Title">




	<h1>@Model.Title</h1>




	<small class="text-muted">

		@{
			var lastUpdatedTime =
			Model.LastUpdatedTime != null
			?
			"· Edytowano " + Model.LastUpdatedTime?.ToString("dd-MM-yyyy")
			:
			"";
		}


		@Model.CreatedTime.ToString("dd-MM-yyyy")
		@lastUpdatedTime
		·
		@Model.Category.Name
		·
		@Model.AdvertisementUserName

		@if (Model.AdvertisementUserId == Model.CurrentUserId)
		{
			<a href="@Url.Action("AddEdit","Advertisement",
					new { id = Model.Id })"
			   class="btn btn-primary btn-sm text-ligh mx-1">

				<i class="fa-solid fa-pen-to-square"></i>
				Edytuj

			</a>

			<a href="@Url.Action("Delete","Advertisement",
					new { id = Model.Id })"
			   class="btn btn-danger btn-sm text-ligh mx-1">

				<i class="fa-solid fa-trash"></i>
				Usuń

			</a>
		}

	</small>




	<p class="text-justify mt-3">@Model.Content</p>




	@if (Model.Comments != null && Model.Comments.Any())
	{
		foreach (var comment in Model.Comments)
		{
			<div class="card mb-3">
				<div class="card-body">

					<small class="text-muted">

						@comment.CreatedDate.ToString("dd-MM-yyyy")
						·
						@comment.CommentUserName

						@if (comment.CommentUserId == Model.CurrentUserId)
						{
							<a href="@Url.Action("Delete","Comment",
									new { id = comment.Id, advertisementId = Model.Id })"
							   class="btn btn-danger btn-sm text-ligh mx-1">

								<i class="fa-solid fa-trash"></i>
								Usuń

							</a>
						}

					</small>

					<p class="card-text mt-2">@comment.Content</p>

				</div>
			</div>
		}
	}
	else
	{
		<div class="alert alert-info mt-3" role="alert">
			Ogłoszenie nie posiada komentarzy.
		</div>
	}




	@if (Model.CurrentUserId != null)
	{
		using (Html.BeginForm("Add", "Comment"))
		{
			@Html.AntiForgeryToken()

			@Html.ValidationMessageFor(x => x.CommentContent, "", new { @class = "text-danger" })

			@Html.HiddenFor(x => x.Id)

			@Html.TextAreaFor(x => x.CommentContent, new { @class = "form-control mt-3 mb-2", @placeholder = "Zacznij pisać..." })

			<button type="submit"
					class="btn btn-primary mt-1">

				<i class="fa-solid fa-plus"></i>
				Dodaj komentarz

			</button>

		}
	}
	else
	{
		<div class="alert alert-warning mt-3" role="alert">
			Celem dodania nowego komentarza należy się zalogować!
		</div>
	}




</div>
